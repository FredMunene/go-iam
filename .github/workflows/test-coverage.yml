name: Test and Coverage

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:7.0
        ports:
          - 27017:27017
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.5

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Wait for MongoDB
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/127.0.0.1/27017) >/dev/null 2>&1 && echo "MongoDB is up" && break
            echo "Waiting for MongoDB..."
            sleep 1
          done

      - name: Wait for Redis
        run: |
          for i in {1..60}; do
            (echo > /dev/tcp/127.0.0.1/6379) >/dev/null 2>&1 && echo "Redis is up" && break
            echo "Waiting for Redis..."
            sleep 1
          done

      - name: Run tests with coverage
        run: |
          export DB_HOST=mongodb://127.0.0.1:27017
          export MONGODB_URL=mongodb://127.0.0.1:27017
          CP=$(go list ./... | grep -v 'utils/test' | paste -sd, -)
          go test -v -race -coverpkg="$CP" -coverprofile=coverage.out -covermode=atomic ./...


      - name: Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Check coverage threshold
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Current coverage: ${COVERAGE}%"
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "❌ Coverage ${COVERAGE}% is below the required 90% threshold"
            exit 1
          else
            echo "✅ Coverage ${COVERAGE}% meets the required 90% threshold"
          fi

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-1.23.5
          path: |
            coverage.out
            coverage.html

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.5

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
